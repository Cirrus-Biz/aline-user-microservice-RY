pipeline {
    environment {
        registryEndpoint = 'aline-user-ry'
        registryURL = "Cirrus-Business-ECR-URL"
        registryCredential = 'ry-aws-credential'
        dockerImage = ''
    }
    agent any
    stages {
        stage('Package') { 
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true clean package' 
            }
        }
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv(installationName: 'sonarqube') {
                    sh 'mvn sonar:sonar'
                }
            } 
        }
        stage('Build') {
            steps {
                script {
                    dockerImage = docker.build registryURL + registryEndpoint + ":${GIT_COMMIT}"
                }
            }
        }
        stage('Deploy Image') {
            steps {
                script {
                    docker.withRegistry("https://" + registryURL + registryEndpoint + "ecr:us-east-1:" + registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage ('Clean Up') {
            steps {
                sh 'docker rmi $registry:${GIT_COMMIT}'
            }
        }
    }
}





// add to sonarqube:
    // quality gates
    // refactor stages to sonarqube before packages
// add maven test, maven verify, 